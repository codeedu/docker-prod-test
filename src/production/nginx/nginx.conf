# ============================================================================
# Configuração do Nginx para Produção - Produção
# ============================================================================
# 
# ============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Otimizações de performance
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ========================================================================
    # LOGGING
    # ========================================================================
    log_format json_combined escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time"'
    '}';

    access_log /var/log/nginx/access.log json_combined;

    # ========================================================================
    # PERFORMANCE E SEGURANÇA
    # ========================================================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Ocultar versão do Nginx (segurança)
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # ========================================================================
    # RATE LIMITING (Segurança)
    # ========================================================================
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # ========================================================================
    # UPSTREAM - Backend Node.js (3 réplicas)
    # ========================================================================
    upstream backend {
        # Estratégia de load balancing: least_conn
        # Distribui para o servidor com menos conexões ativas
        least_conn;
        
        # 3 réplicas do app service
        # Docker Compose cria automaticamente DNS round-robin para "app"
        # mas definir explicitamente garante melhor controle
        server app:3000 max_fails=3 fail_timeout=30s weight=1;
        
        # NOTA: Com deploy.replicas=3, o Docker resolve "app" para as 3 instâncias
        # via DNS round-robin interno. Cada requisição para "app:3000" 
        # automaticamente rotaciona entre os 3 containers.
        
        # Keepalive para melhor performance
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # ========================================================================
    # CONFIGURAÇÃO DE INCLUDES
    # ========================================================================
    include /etc/nginx/conf.d/*.conf;
}
